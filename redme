üöÄ 1Ô∏è‚É£ Setup inicial
1Ô∏è‚É£ cd nome-da-pasta

Entra na pasta do projeto.

2Ô∏è‚É£ npm create vite@latest

Cria projeto React com Vite (o Vite √© MUITO mais r√°pido que Create React App).

3Ô∏è‚É£ npm install ou npm i

Baixa as depend√™ncias (node_modules).

4Ô∏è‚É£ npm run dev

Sobe o projeto em modo dev (acessa em localhost:5173).

5Ô∏è‚É£ Prettier

Usado pra formatar e organizar c√≥digo (pode tamb√©m automatizar classes do Tailwind e limpar bagun√ßa).

üí• 2Ô∏è‚É£ Estrutura r√°pida do React
No HTML puro, a gente usava "!" pra gerar boilerplate.

No React, usa o atalho rafce (se tiver ES7+ React Snippets no VSCode), que j√° cria um componente funcional b√°sico.

üåê 3Ô∏è‚É£ Gerenciamento de rotas (React Router)
Funciona igual ao conceito de @pages no Blazor, s√≥ que no React usamos a lib react-router-dom.

Importa√ß√£o base

import { BrowserRouter, Routes, Route, Link } from "react-router-dom";
‚úÖ BrowserRouter
O "guardi√£o" das rotas.

Envolve toda a app e controla o hist√≥rico do navegador.

Sem ele, nada de rotas funcionando.

‚úÖ Routes
Cont√™iner que agrupa todos os <Route />.

Pensa como uma "caixa" onde ficam todas as rotas dispon√≠veis.

‚úÖ Route
Define cada rota individual.

Exemplo:


<Route path="/about" element={<About />} />
Se a URL bater com /about, renderiza o componente <About />.

‚úÖ Link
Equivalente √† tag <a>, mas sem reload da p√°gina.

Exemplo:


<Link to="/about">Sobre</Link>
Quando voc√™ clica, navega pra /about sem recarregar tudo.

‚ö° 4Ô∏è‚É£ Compara√ß√£o r√°pida com Blazor
Ambos s√£o baseados em componentes.

O React tamb√©m usa rotas e navega√ß√£o sem reload, igual Blazor.

S√≥ que no React as rotas s√£o definidas no front usando react-router-dom, enquanto no Blazor √© via @page.

para entender de tailwind e so entrar na documenta√ß√£o e pesquisar o codigo que ja temos pronto 



BACKEND 
cd nome da pasta 
npm init -y = criar o package que e o nosso arquivo json
npm i express instalar a biblioteca express

no package json tem que mudar em scipts tem que mudar o test para dev e colocar node --watch que e pra quando ter atualiza√ß√µes n√£o tenha que fechar o servido nem nada, ./ nomde do arquivo index.js.





BANCO DE DADOS = mongo
new project
